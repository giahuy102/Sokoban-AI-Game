        box_pos = current_state.box_pos.copy()
        if ((x, y + 1) in box_pos):
            new_box = box_pos.copy()
            new_box.remove((x, y + 1))
            new_box.add((x, y + 2))
        
        #continue execute if (x, y + 1) not a wall. 
        #if (x, y + 1) have a box, then (x, y + 2) must be free
        # return t1 != '#' and ((x, y + 1) not in box_pos or (t2 != '#' and (x, y + 2) not in box_pos and self.no_simple_deadlock[x][y + 2]))

        return t1 != '#' and ((x, y + 1) not in box_pos or (t2 != '#' and (x, y + 2) not in box_pos and self.no_simple_deadlock[x][y + 2] and (not DeadlockSolver.has_freeze_deadlock((x, y + 2), self.matrix, new_box, self.goal_pos, self.no_simple_deadlock, set()) or (new_box != goal_pos))))