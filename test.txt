        if (self.can_go_up(state)):
            new_state = self.go_up(state, self.f_heuristic)
            if (new_state not in closed_set):
                closed_set.add(new_state)
                frontier.put(new_state)
            else:
                id = hash(new_state)
                if (new_state.fval < state_lookup_table[id].fval):
                    state_lookup_table[id].fval = new_state.fval
                    state_lookup_table[id].gval = new_state.gval
                    state_lookup_table[id].ancestor = new_state.ancestor

        if (self.can_go_right(state)):
            new_state = self.go_right(state, self.f_heuristic)
            if (new_state not in closed_set):
                closed_set.add(new_state)
                frontier.put(new_state)
            else:
                id = hash(new_state)
                if (new_state.fval < state_lookup_table[id].fval):
                    state_lookup_table[id].fval = new_state.fval
                    state_lookup_table[id].gval = new_state.gval
                    state_lookup_table[id].ancestor = new_state.ancestor

        if (self.can_go_left(state)):
            new_state = self.go_left(state, self.f_heuristic)
            if (new_state not in closed_set):
                closed_set.add(new_state)
                frontier.put(new_state)
            else:
                id = hash(new_state)
                if (new_state.fval < state_lookup_table[id].fval):
                    state_lookup_table[id].fval = new_state.fval
                    state_lookup_table[id].gval = new_state.gval
                    state_lookup_table[id].ancestor = new_state.ancestor

        if (self.can_go_down(state)):
            new_state = self.go_down(state, self.f_heuristic)
            if (new_state not in closed_set):
                closed_set.add(new_state)
                frontier.put(new_state)
            else:
                id = hash(new_state)
                if (new_state.fval < state_lookup_table[id].fval):
                    state_lookup_table[id].fval = new_state.fval
                    state_lookup_table[id].gval = new_state.gval
                    state_lookup_table[id].ancestor = new_state.ancestor